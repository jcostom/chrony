#!/bin/bash

# This script is (ahem, heavily) inspired by the script from cturra/ntp. 
# Thanks Chris, I'm a fan of your work. I just prefer a Debianish-based 
# base image. :-)

# I also prefer Google's leap-smeared approach to Cloudflare as my default...
DEFAULT_NTP="time1.google.com,time3.google.com,time3.google.com,time4.google.com"
CHRONY_CONFIG="/etc/chrony/runtime.conf"

USER="_chrony"
GROUP="_chrony"
RUNDIR="/run/chrony"
LIBDIR="/var/lib/chrony"

# confirm correct permissions on chrony run directory
if [ -d ${RUNDIR} ]; then
  chown -R ${USER}:${GROUP} ${RUNDIR}
  chmod 750 ${RUNDIR}
  # remove previous pid file if it exist
  # can't imagine why it would be there, but if it is, let's
  # obliterate it.
  rm -f ${RUNDIR}/chronyd.pid
fi

# confirm correct permissions on chrony variable state directory
if [ -d ${LIBDIR} ]; then
  chown -R ${USER}:${GROUP} ${LIBDIR}
fi

## dynamically populate chrony config file.
{
  echo "# https://github.com/jcostom/chrony"
  echo
  echo "# runtime.conf file generated by startup script"
  echo "# located at /app/startup.sh"
  echo
  echo "# time servers provided by NTP_SERVER environment variables."
} > ${CHRONY_CONFIG}

# if NTP_SERVERS environment variable isn't there
# populate with defaults
if [ -z "${NTP_SERVERS}" ]; then
  NTP_SERVERS="${DEFAULT_NTP}"
fi

# LOG_LEVEL environment variable is not present, so populate with chrony default (0)
# chrony log levels: 0 (informational), 1 (warning), 2 (non-fatal error) and 3 (fatal error)
if [ -z "${LOG_LEVEL}" ]; then
  LOG_LEVEL=0
else
  # confirm log level is between 0-3, since these are the only log levels supported
  if [ "${LOG_LEVEL}" -gt 3 ]; then
    # level outside of supported range, let's set to default (0)
    LOG_LEVEL=0
  fi
fi

IFS=","
for N in $NTP_SERVERS; do
  # strip any quotes found before or after ntp server
  N_CLEAN=${N//\"/}

  # Check to see if our clock source is from 127/8, ie, in the loopback range,
  # or the local system clock.
  if [[ "${N_CLEAN}" == 127\.* ]]; then
    echo "server ${N_CLEAN}" >> ${CHRONY_CONFIG}
    echo "local stratum 10" >> ${CHRONY_CONFIG}

  # found external time servers
  else
    echo "server ${N_CLEAN} iburst" >> ${CHRONY_CONFIG}
  fi
done

# final bits for the config file
{
  echo
  echo "driftfile ${LIBDIR}/chrony.drift"
  echo "makestep 0.1 3"
  echo "rtcsync"
  echo
  echo "allow all"
} >> ${CHRONY_CONFIG}

## startup chronyd in the foreground
exec /usr/sbin/chronyd -u ${USER} -d -x -L ${LOG_LEVEL} -f ${CHRONY_CONFIG}
